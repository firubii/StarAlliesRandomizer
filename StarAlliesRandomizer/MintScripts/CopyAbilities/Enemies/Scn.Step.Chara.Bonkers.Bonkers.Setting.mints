script Scn.Step.Chara.Bonkers.Bonkers.Setting
{
	util class Scn.Step.Chara.Bonkers.Bonkers.Setting
	{
		delegate void Init(Scn.Step.Chara.SettingData)
		{
			fenter 8, 1, 0
			ldsrsr r1, r0
			call   r1, Scn.Step.Chara.SettingUtil.InitMBoss(Scn.Step.Chara.SettingData)
			ldsrsr r1, r0
			sppshz r2, Hel.Vector3
			ldsr2  r3, r2, 0x0
			ldsr2  r5, 0x3F666666, 0x0
			calltv r3, Hel.Vector3.this(float,float,float)
			calltv r1, Scn.Step.Chara.SettingData.setCenterOffs(const ref Hel.Vector3)
			sppop  r2, Hel.Vector3
			ldsr2  r1, r0, %ABILITY_ID%
			calltv r1, Scn.Step.Chara.SettingData.setAbilityKind(int)
			ldsrsr r3, r0
			calltr r2, Scn.Step.Chara.SettingData.variation()const
			ldsrc4 r1, 0x0
			eqi32  r1, r2, r1
			jmpneg r1, loc_00000014
			ldsr2  r1, r0, 0x3
			calltv r1, Scn.Step.Chara.SettingData.setRetryCountKind(int)
			jmp    loc_00000016
			
			loc_00000014:
			ldsr2  r1, r0, 0x4
			calltv r1, Scn.Step.Chara.SettingData.setRetryCountKind(int)
			
			loc_00000016:
			ldsrsr r4, r0
			calltr r3, Scn.Step.Chara.SettingData.level()const
			ldsrc4 r1, 0xB4
			ldsr2  r4, r1, 0xC8
			ldsr2  r6, 0xF0, 0x3
			les32  r7, r7, r3
			jmpneg r7, loc_00000020
			ldsrsr r2, r6
			jmp    loc_00000027
			jmp    loc_00000027
			
			loc_00000020:
			ldsrc4 r7, 0x2
			eqi32  r7, r3, r7
			jmpneg r7, loc_00000026
			ldsrsr r2, r5
			jmp    loc_00000027
			jmp    loc_00000027
			
			loc_00000026:
			ldsrsr r2, r4
			
			loc_00000027:
			ldsrsr r1, r2
			ldsrsr r3, r0
			calltr r2, Scn.Step.Chara.SettingData.variation()const
			ldsrc4 r3, 0x0
			eqi32  r4, r2, r3
			jmppos r4, loc_00000034
			ldsrc4 r3, 0x1
			eqi32  r4, r2, r3
			jmppos r4, loc_00000037
			ldsrc4 r3, 0x2
			eqi32  r4, r2, r3
			jmppos r4, loc_0000003e
			jmp    loc_00000045
			
			loc_00000034:
			ldsr2  r2, r0, r1
			calltv r2, Scn.Step.Chara.SettingData.setHitPoint(int)
			jmp    return
			
			loc_00000037:
			ctf32s r2, r1
			ldsrsv r3, Scn.Step.Chara.HitPointUtil.MBossExHitPointRate
			mulf32 r2, r2, r3
			cts32f r2, r2
			ldsr2  r3, r0, r2
			calltv r3, Scn.Step.Chara.SettingData.setHitPoint(int)
			jmp    return
			
			loc_0000003e:
			ctf32s r2, r1
			ldsrsv r3, Scn.Step.Chara.HitPointUtil.MBossEx2HitPointRate
			mulf32 r2, r2, r3
			cts32f r2, r2
			ldsr2  r3, r0, r2
			calltv r3, Scn.Step.Chara.SettingData.setHitPoint(int)
			jmp    return
			
			loc_00000045:
			ldsr2  r2, r0, r1
			calltv r2, Scn.Step.Chara.SettingData.setHitPoint(int)
			
			return:
			fleave r0
		}
		
		delegate void InitAfterCreateModule(Scn.Step.Chara.Obj)
		{
			fenter 13, 1, 0
			ldsrsr r1, r0
			call   r1, Scn.Step.Chara.SettingUtil.InitMBossAfterCreateModule(Scn.Step.Chara.Obj)
			ldsrsr r3, r0
			calltr r2, Scn.Step.Chara.Obj.objColl()
			ldsrsr r1, r2
			ldsrsr r4, r1
			calltr r3, Scn.Step.Chara.ObjColl.attack()
			ldsrsr r2, r3
			ldsrsr r5, r2
			calltr r4, Scn.Step.OColl.Attack.attackDataRootDefault()
			ldsr2  r3, r4, r3
			ldsrc4 r5, 0x7
			calltv r4, OColl.AttackData.setPower(int)
			ldsr2  r4, r3, 0x1
			calltv r4, OColl.AttackData.setEffectType(int)
			ldsr2  r4, r3, 0x3
			calltv r4, OColl.AttackData.setBlowType(int)
			ldsr2  r4, r3, 0x1
			calltv r4, OColl.AttackData.setDenudeLv(int)
			ldsr2  r4, r3, 0x3D3851EC
			calltv r4, OColl.AttackData.setGuardBreakRate(float)
			ldsr2  r4, r3, 0x800
			calltv r4, OColl.AttackData.removeTargetTeam(uint)
			ldsr2  r4, r3, 0x200
			calltv r4, OColl.AttackData.removeTargetTeam(uint)
			ldsr2  r4, r3, 0x80
			calltv r4, OColl.AttackData.removeTargetTeam(uint)
			ldsrsr r4, r2
			calltv r4, Scn.Step.OColl.Attack.resetAttackDataToDefault()
			ldsrsr r6, r0
			calltr r5, Scn.Step.Chara.Obj.model()
			calltr r4, Scn.Step.CharaUtil.Model.scaleCtrl()
			ldsrc4 r5, 0x40000000
			calltv r4, Scn.Step.CharaUtil.ModelScaleCtrl.setBaseScale(float)
			ldsrsr r5, r0
			calltr r4, Scn.Step.Chara.Obj.bodyRadiusCtrl()
			ldsrc4 r5, 0x3F26A7F0
			calltv r4, Scn.Step.Chara.BodyRadiusCtrl.setBaseRadius(float)
			ldsr2  r5, r0, 0x1
			ldsrsr r8, r5
			calltr r7, Scn.Step.Chara.Obj.variation()const
			eqi32  r6, r7, r6
			jmppos r6, loc_00000030
			ldsrsr r8, r5
			calltr r7, Scn.Step.Chara.Obj.variation()const
			ldsrc4 r6, 0x2
			eqi32  r6, r7, r6
			
			loc_00000030:
			jmpneg r6, loc_00000033
			ldsrbt r4
			jmp    loc_00000034
			
			loc_00000033:
			ldsrzr r4
			
			loc_00000034:
			jmpneg r4, loc_0000003a
			ldsrsr r5, r0
			calltr r4, Scn.Step.Chara.Obj.gearModelCtrl()
			ldsrca r5, "Common/Hero/Bonkers/EnemyHammerEX"
			calltv r4, Scn.Step.Chara.GearModelCtrl.init(string)
			jmp    loc_0000003e
			
			loc_0000003a:
			ldsrsr r5, r0
			calltr r4, Scn.Step.Chara.Obj.gearModelCtrl()
			ldsrca r5, "Common/Hero/Bonkers/EnemyHammer"
			calltv r4, Scn.Step.Chara.GearModelCtrl.init(string)
			
			loc_0000003e:
			ldsrsr r5, r0
			calltr r4, Scn.Step.Chara.Obj.gearModelCtrl()
			ldsrca r5, "Common/Hero/Bonkers/Hammer"
			calltv r4, Scn.Step.Chara.GearModelCtrl.initAnimPath(string)
			ldsrsr r6, r0
			calltr r5, Scn.Step.Chara.Obj.gearModelCtrl()
			calltr r4, Scn.Step.Chara.GearModelCtrl.model()
			sppsh  r5, G3D.NodeRef
			ldsrsr r7, r0
			calltr r6, Scn.Step.Chara.Obj.model()
			ldsrca r7, "RHaveL"
			calltr r5, Scn.Step.CharaUtil.Model.node(string)
			calltv r4, G3D.StdModel.setParent(const ref G3D.NodeRef)
			sppop  r5, G3D.NodeRef
			ldsrsr r5, r0
			calltr r4, Scn.Step.Chara.Obj.gearModelCtrl()
			sppsh  r5, Hel.Vector3
			sppsh  r6, Hel.Vector3
			sppsh  r7, Hel.Vector3
			sppshz r8, Hel.Vector3
			ldsr2  r9, r8, 0x3F800000
			ldsr2  r11, 0x3F800000, 0x3F800000
			calltv r9, Hel.Vector3.this(float,float,float)
			mcopys r7, r8, Hel.Vector3
			sppop  r8, Hel.Vector3
			mcopys r6, r7, Hel.Vector3
			sppop  r7, Hel.Vector3
			ldsrc4 r7, 0x3F19999A
			calltr r5, Hel.Vector3.opMul(float)const
			calltv r4, Scn.Step.Chara.GearModelCtrl.setBaseScale(const ref Hel.Vector3)
			sppop  r6, Hel.Vector3
			sppop  r5, Hel.Vector3
			ldsrsr r5, r0
			calltr r4, Scn.Step.Chara.Obj.gearModelCtrl()
			ldsrsv r5, Scn.Step.Chara.Bonkers.Bonkers.Constant.DefaultParentScaleIgnoreMode
			calltv r4, Scn.Step.Chara.GearModelCtrl.setParentScaleIgnore(G3D.ParentScaleIgnoreMode)
			ldsrsr r5, r0
			calltr r4, Scn.Step.Chara.Obj.gearModelCtrl()
			ldsrca r5, "AllJ"
			calltv r4, Scn.Step.Chara.GearModelCtrl.setDefaultBindNode(string)
			ldsrsr r6, r0
			calltr r5, Scn.Step.Chara.Obj.variation()const
			ldsrc4 r4, 0x2
			eqi32  r4, r5, r4
			jmpneg r4, loc_00000079
			ldsr2  r4, r0, r4
			ldsr2  r6, 0x3F800000, 0x3F800000
			ldsrsr r12, r5
			calltr r11, Scn.Step.Chara.Obj.comp()
			calltr r10, Scn.Step.Component.heroManager()
			calltr r9, Scn.Step.Hero.Manager.damageRateCtrl()
			ldsr2  r8, r9, r8
			ldsr2  r10, r6, r7
			calltv r9, Scn.Step.Hero.DamageRateCtrl.setDamageRate(float,float)
			ldsr2  r9, r8, 0x3D4CCCCD
			ldsrc4 r11, 0x3C23D70A
			calltv r9, Scn.Step.Hero.DamageRateCtrl.setGuardWeakRate(float,float)
			ldsrsr r9, r8
			calltv r9, Scn.Step.Hero.DamageRateCtrl.setStarShotPowerUp()
			
			loc_00000079:
			ldsrsr r5, r0
			calltr r4, Scn.Step.Chara.Obj.angryCtrl()
			ldsr2  r5, 0x1, 0x3F0CCCCD
			ldsrca r7, "Scn.Step.Chara.Bonkers.Bonkers.Brain.ExecAngry"
			calltv r4, Scn.Step.Chara.AngryCtrl.setAngrySetting(int,float,string)
			obnew  r5, Scn.Step.Chara.Bonkers.Bonkers.Custom
			ldsr2  r6, r5, r0
			stofap r7, r6, Scn.Step.Chara.Bonkers.Bonkers.Custom.mObj
			obnew  r9, Scn.Step.Chara.Bonkers.Bonkers.HammerScaleCtrl
			ldsrsr r10, r9
			ldofap r11, r6, Scn.Step.Chara.Bonkers.Bonkers.Custom.mObj
			call   r10, Scn.Step.Chara.Bonkers.Bonkers.HammerScaleCtrl.this(Scn.Step.Chara.Obj)
			stofap r9, r6, Scn.Step.Chara.Bonkers.Bonkers.Custom.mHammerScaleCtrl
			ldofap r8, r6, Scn.Step.Chara.Bonkers.Bonkers.Custom.mObj
			call   r8, Scn.Step.Chara.Bonkers.Bonkers.Utility.SetBodyCollDefault(Scn.Step.Chara.Obj)
			ldsrsr r4, r5
			ldsrsr r6, r0
			calltr r5, Scn.Step.Chara.Obj.custom()
			obname r6, r4
			ldsrsr r7, r4
			calltv r5, Scn.Step.CharaUtil.Custom.setObj(string,object)
			sppsh  r5, Scn.Step.OColl.HitBranchProxy
			ldsrsr r9, r0
			calltr r8, Scn.Step.Chara.Obj.objColl()
			calltr r7, Scn.Step.Chara.ObjColl.bodyColl()
			calltr r6, Scn.Step.OColl.BodyColl.hit()
			ldsrc4 r7, 0x0
			calltr r5, Scn.Step.OColl.Hit.branch(int)
			calltr r4, Scn.Step.OColl.HitBranchProxy.hitData()
			ldsrc4 r5, 0x1
			ldsrsv r6, Scn.Step.OColl.Element.WingToss
			ldsrc4 r7, 0x0
			calltv r4, OColl.HitData.setElement(int,uint,uint)
			sppop  r5, Scn.Step.OColl.HitBranchProxy
			ldsrsr r2, r0
			calltr r1, Scn.Step.Chara.Obj.vacuumReceiver()
			ldsrc4 r2, %ELEMENT_ID%
			calltv r1, Scn.Step.Vacuum.Receiver.setAbilityElement(uint)
			fleave r0
		}
	}
}
