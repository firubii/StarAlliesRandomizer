script Scn.Step.Chara.TwoFace.TwoFace.Setting
{
	util class Scn.Step.Chara.TwoFace.TwoFace.Setting
	{
		delegate void Init(Scn.Step.Chara.SettingData)
		{
			fenter 7, 1, 0
			ldsrsr r1, r0
			call   r1, Scn.Step.Chara.SettingUtil.InitEnemy(Scn.Step.Chara.SettingData)
			ldsr2  r1, r0, %ABILITY_ID%
			calltv r1, Scn.Step.Chara.SettingData.setAbilityKind(int)
			ldsrsr r1, r0
			ldsrc4 r3, 0x1
			ldsrsv r4, Scn.Step.Chara.HitPointUtil.HitPointTable
			ldsr2  r5, r3, 0x10
			astidx r3, r6
			aridx  r4, r3
			ldsra4 r2, r4
			calltv r1, Scn.Step.Chara.SettingData.setHitPoint(int)
			fleave r0
		}
		
		delegate void InitAfterCreateModule(Scn.Step.Chara.Obj)
		{
			fenter 12, 1, 0
			ldsrsr r1, r0
			call   r1, Scn.Step.Chara.SettingUtil.InitEnemyAfterCreateModule(Scn.Step.Chara.Obj)
			sppsh  r1, Hel.Geo.Aabb3
			sppsh  r2, Hel.Geo.Aabb3
			sppsh  r3, Scn.Step.OColl.HitBranchProxy
			ldsrsr r7, r0
			calltr r6, Scn.Step.Chara.Obj.objColl()
			calltr r5, Scn.Step.Chara.ObjColl.bodyColl()
			calltr r4, Scn.Step.OColl.BodyColl.hit()
			ldsrc4 r5, 0x0
			calltr r3, Scn.Step.OColl.Hit.branch(int)
			ldsrc4 r4, 0x0
			calltr r2, Scn.Step.OColl.HitBranchProxy.nodeAmbit(int)const
			mcopys r1, r2, Hel.Geo.Aabb3
			sppop  r3, Scn.Step.OColl.HitBranchProxy
			sppop  r2, Hel.Geo.Aabb3
			sppsh  r2, Hel.Geo.Aabb3
			sppshz r3, Hel.Geo.Aabb3
			ldsrsr r4, r3
			sppsh  r5, Hel.Vector3
			sppsh  r6, Hel.Vector3
			ldsrsr r8, r0
			calltr r7, Scn.Step.Chara.Obj.location()
			calltr r6, GObj.Location.toCenter()const
			sppshz r7, Hel.Vector3
			ldsr2  r8, r7, 0x0
			ldsr2  r10, 0x0, 0x3F800000
			calltv r8, Hel.Vector3.this(float,float,float)
			calltr r5, Hel.Vector3.opAdd(const ref Hel.Vector3)const
			ldsrsr r7, r1
			calltr r6, Hel.Geo.Aabb3.width()const
			ldsrsr r8, r1
			calltr r7, Hel.Geo.Aabb3.height()const
			ldsrsr r10, r1
			calltr r9, Hel.Geo.Aabb3.depth()const
			addf32 r8, r9, 0x40000000
			calltv r4, Hel.Geo.Aabb3.this(const ref Hel.Vector3,float,float,float)
			mcopys r2, r3, Hel.Geo.Aabb3
			sppop  r7, Hel.Vector3
			sppop  r6, Hel.Vector3
			sppop  r5, Hel.Vector3
			sppop  r3, Hel.Geo.Aabb3
			sppsh  r3, Scn.Step.OColl.HitBranchProxy
			ldsrsr r7, r0
			calltr r6, Scn.Step.Chara.Obj.objColl()
			calltr r5, Scn.Step.Chara.ObjColl.bodyColl()
			calltr r4, Scn.Step.OColl.BodyColl.hit()
			ldsrc4 r5, 0x0
			calltr r3, Scn.Step.OColl.Hit.branch(int)
			calltv r3, Scn.Step.OColl.HitBranchProxy.clearNode()
			sppop  r3, Scn.Step.OColl.HitBranchProxy
			sppsh  r3, Scn.Step.OColl.HitBranchProxy
			ldsrsr r7, r0
			calltr r6, Scn.Step.Chara.Obj.objColl()
			calltr r5, Scn.Step.Chara.ObjColl.bodyColl()
			calltr r4, Scn.Step.OColl.BodyColl.hit()
			ldsrc4 r5, 0x0
			calltr r3, Scn.Step.OColl.Hit.branch(int)
			sppsh  r4, OColl.NodeRecipe
			ldsrsr r5, r2
			callnv r4, OColl.NodeRecipe.Create(const ref Hel.Geo.Aabb3)
			calltv r3, Scn.Step.OColl.HitBranchProxy.addNode(const ref OColl.NodeRecipe)
			sppop  r4, OColl.NodeRecipe
			sppop  r3, Scn.Step.OColl.HitBranchProxy
			ldsrsr r3, r0
			sppsh  r4, Scn.Step.OColl.AttackProxy
			ldsrsr r5, r3
			sppsh  r6, Scn.Step.OColl.AttackProxy
			ldsr2  r7, r5, 0x0
			call   r6, Scn.Step.Chara.AttackProxyUtil.CreateBodyCollAttack(Scn.Step.Chara.Obj,int)
			mcopys r4, r6, Scn.Step.OColl.AttackProxy
			sppop  r6, Scn.Step.OColl.AttackProxy
			ldsrsr r6, r4
			ldaddr r5, r6, Scn.Step.OColl.AttackProxy.mBranch
			ldsrsr r8, r5
			calltr r7, Scn.Step.OColl.AttackBranchProxy.attackData()
			ldsr2  r5, r7, 0x0
			calltv r5, OColl.AttackData.setDenudeLv(int)
			sppop  r4, Scn.Step.OColl.AttackProxy
			ldsrsr r6, r0
			calltr r5, Scn.Step.Chara.Obj.model()
			calltr r4, Scn.Step.CharaUtil.Model.rotCtrl()
			calltr r3, Scn.Step.CharaUtil.ModelRotCtrlSet.rotH()
			sppsh  r4, Hel.Util.Angle
			ldsrc4 r5, 0x0
			callnv r4, Hel.Util.Angle.FromDeg(float)
			calltv r3, GObj.RotCtrl2d.setRotTargetDefault(const ref Hel.Util.Angle)
			sppop  r4, Hel.Util.Angle
			ldsrsr r6, r0
			calltr r5, Scn.Step.Chara.Obj.model()
			calltr r4, Scn.Step.CharaUtil.Model.rotCtrl()
			calltr r3, Scn.Step.CharaUtil.ModelRotCtrlSet.rotH()
			ldsrc4 r4, 0x3F800000
			calltv r3, GObj.RotCtrl2d.setRotIntpRateDefault(float)
			ldsrsr r4, r0
			calltr r3, Scn.Step.Chara.Obj.target()
			ldsrbt r4
			calltv r3, GObj.Target.setIsRightDir(bool)
			sppsh  r3, Hel.Vector3
			sppsh  r4, Hel.Vector3
			ldsrsr r6, r0
			calltr r5, Scn.Step.Chara.Obj.location()
			calltr r4, GObj.Location.pos()const
			mcopys r3, r4, Hel.Vector3
			sppop  r4, Hel.Vector3
			ldaddr r5, r3, Hel.Vector3.z
			ldsra4 r4, r5
			ldsrc4 r6, 0x40000000
			negf32 r6, r6
			addf32 r4, r4, r6
			stsra4 r5, r4
			ldsrsr r5, r0
			calltr r4, Scn.Step.Chara.Obj.location()
			ldsrsr r5, r3
			calltv r4, GObj.Location.setPos(const ref Hel.Vector3)
			sppop  r3, Hel.Vector3
			sppop  r2, Hel.Geo.Aabb3
			sppop  r1, Hel.Geo.Aabb3
			ldsrsr r2, r0
			calltr r1, Scn.Step.Chara.Obj.vacuumReceiver()
			ldsrc4 r2, %ELEMENT_ID%
			calltv r1, Scn.Step.Vacuum.Receiver.setAbilityElement(uint)
			fleave r0
		}
	}
}
