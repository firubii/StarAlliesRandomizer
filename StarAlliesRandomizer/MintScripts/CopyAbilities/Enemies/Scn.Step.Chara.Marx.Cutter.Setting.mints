script Scn.Step.Chara.Marx.Cutter.Setting
{
	util class Scn.Step.Chara.Marx.Cutter.Setting
	{
		delegate void Init(Scn.Step.Chara.SettingData)
		{
			fenter 9, 1, 0
			ldsrsr r1, r0
			call   r1, Scn.Step.Chara.SettingUtil.InitEnemyWeapon(Scn.Step.Chara.SettingData)
			ldsrsr r1, r0
			sppsh  r2, Hel.Vector3
			sppsh  r3, Hel.Vector3
			sppshz r4, Hel.Vector3
			ldsr2  r5, r4, 0x0
			ldsr2  r7, 0x0, 0x0
			calltv r5, Hel.Vector3.this(float,float,float)
			mcopys r3, r4, Hel.Vector3
			sppop  r4, Hel.Vector3
			mcopys r2, r3, Hel.Vector3
			sppop  r3, Hel.Vector3
			calltv r1, Scn.Step.Chara.SettingData.setCenterOffs(const ref Hel.Vector3)
			sppop  r2, Hel.Vector3
			ldsrsr r1, r0
			ldsrzr r2
			calltv r1, Scn.Step.Chara.SettingData.setUseMapColl(bool)
			ldsr2  r1, r0, 0x1
			calltv r1, Scn.Step.Chara.SettingData.setHitPoint(int)
			ldsr2  r1, r0, %ABILITY_ID%
			calltv r1, Scn.Step.Chara.SettingData.setAbilityKind(int)
			fleave r0
		}
		
		delegate void InitAfterCreateModule(Scn.Step.Chara.Obj)
		{
			fenter 8, 1, 0
			ldsr2  r1, r0, r1
			call   r2, Scn.Step.Chara.SettingUtil.InitWeaponAfterCreateModule(Scn.Step.Chara.Obj)
			ldsrsr r4, r1
			calltr r3, Scn.Step.Chara.Obj.objColl()
			calltr r2, Scn.Step.Chara.ObjColl.bodyColl()
			calltv r2, Scn.Step.OColl.BodyColl.clearNode()
			ldsrsr r2, r0
			calltr r1, Scn.Step.Chara.Obj.vacuumReceiver()
			ldsrc4 r2, 0x0
			calltv r1, Scn.Step.Vacuum.Receiver.setResistLv(int)
			ldsrsr r3, r0
			calltr r2, Scn.Step.Chara.Obj.effect()
			calltr r1, Scn.Step.Chara.Effect.body()
			ldsrc4 r2, 0x7DE
			sppsh  r3, G3D.NodeRef
			ldsrsr r7, r0
			calltr r6, Scn.Step.Chara.Obj.model()
			calltr r5, Scn.Step.CharaUtil.Model.model()
			calltr r4, GObj.Model.g3dModel()
			calltr r3, G3D.Model.nodeRoot()
			calltv r1, Scn.Step.CharaUtil.Effect.requestN(int,const ref G3D.NodeRef)
			sppop  r3, G3D.NodeRef
			ldsrsr r2, r0
			calltr r1, Scn.Step.Chara.Obj.vacuumReceiver()
			ldsrc4 r2, %ELEMENT_ID%
			calltv r1, Scn.Step.Vacuum.Receiver.setAbilityElement(uint)
			fleave r0
		}
	}
}
