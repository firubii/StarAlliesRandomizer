script Scn.Step.Chara.Waddledee.Waddledee.Setting
{
	util class Scn.Step.Chara.Waddledee.Waddledee.Setting
	{
		delegate void Init(Scn.Step.Chara.SettingData)
		{
			fenter 2, 1, 0
			ldsrsr r1, r0
			call   r1, Scn.Step.Chara.SettingUtil.InitEnemy(Scn.Step.Chara.SettingData)
			ldsr2  r1, r0, %ABILITY_ID%
			calltv r1, Scn.Step.Chara.SettingData.setAbilityKind(int)
			fleave r0
		}
		
		delegate void InitAfterCreateModule(Scn.Step.Chara.Obj)
		{
			fenter 17, 1, 0
			ldsrsr r1, r0
			call   r1, Scn.Step.Chara.SettingUtil.InitEnemyAfterCreateModule(Scn.Step.Chara.Obj)
			ldsrsr r2, r0
			calltr r1, Scn.Step.Chara.Obj.objCollReactor()
			ldsrzr r2
			calltv r1, Scn.Step.Chara.ObjCollReactor.setIsPopCopySourceFromTinkleDamage(bool)
			ldsrsr r2, r0
			calltr r1, Scn.Step.Chara.Obj.variation()const
			ldsrc4 r2, 0x6
			eqi32  r3, r1, r2
			jmppos r3, loc_00000013
			ldsrc4 r2, 0x7
			eqi32  r3, r1, r2
			jmppos r3, loc_00000013
			ldsrc4 r2, 0x8
			eqi32  r3, r1, r2
			jmppos r3, loc_00000013
			jmp    return
			
			loc_00000013:
			ldsrsr r1, r0
			ldsrsr r5, r1
			calltr r4, Scn.Step.Chara.Obj.objRelationCtrl()
			calltr r3, Scn.Step.CharaUtil.ObjRelationCtrl.isLinked()const
			ntbool r2, r3
			jmpneg r2, return
			sppsh  r2, Scn.Step.Chara.ObjPtr
			sppsh  r3, Scn.Step.Chara.ObjPtr
			ldsr2  r4, r1, 0x40
			ldsr2  r6, 0x4, 0x0
			ldsrc4 r8, 0x0
			sppsh  r9, Hel.Vector3
			ldsrsr r11, r1
			calltr r10, Scn.Step.Chara.Obj.location()
			calltr r9, GObj.Location.centerPos()const
			sppsh  r10, Hel.Vector3
			sppsh  r11, Hel.Vector3
			sppshz r12, Hel.Vector3
			ldsr2  r13, r12, 0x0
			ldsr2  r15, 0x0, 0x0
			calltv r13, Hel.Vector3.this(float,float,float)
			mcopys r11, r12, Hel.Vector3
			sppop  r12, Hel.Vector3
			mcopys r10, r11, Hel.Vector3
			sppop  r11, Hel.Vector3
			call   r3, Scn.Step.Chara.WeaponUtil.Create(Scn.Step.Chara.Obj,int,int,int,int,const ref Hel.Vector3,const ref Hel.Vector3)
			mcopys r2, r3, Scn.Step.Chara.ObjPtr
			sppop  r10, Hel.Vector3
			sppop  r9, Hel.Vector3
			sppop  r3, Scn.Step.Chara.ObjPtr
			ldsrsr r4, r2
			calltr r3, Scn.Step.Chara.ObjPtr.isValid()const
			jmpneg r3, loc_00000068
			ldsrsr r4, r2
			calltr r3, Scn.Step.Chara.ObjPtr.obj()const
			sppsh  r4, Scn.Step.Chara.ObjPtr
			sppshz r5, Scn.Step.Chara.ObjPtr
			ldsr2  r6, r5, r1
			calltv r6, Scn.Step.Chara.ObjPtr.this(Scn.Step.Chara.Obj)
			mcopys r4, r5, Scn.Step.Chara.ObjPtr
			ldsrsr r5, r3
			sppsh  r6, Scn.Step.Chara.ObjPtr
			mcopys r6, r4, Scn.Step.Chara.ObjPtr
			sppshz r7, Scn.Step.Chara.EnemyCommon.Parasol.StateMain
			ldsr2  r8, r7, r5
			sppsh  r10, Scn.Step.Chara.ObjPtr
			mcopys r10, r6, Scn.Step.Chara.ObjPtr
			stofap r9, r8, Scn.Step.Chara.EnemyCommon.Parasol.StateMain.mObj
			ldaddr r11, r8, Scn.Step.Chara.EnemyCommon.Parasol.StateMain.mParentObjPtr
			mcopys r11, r10, Scn.Step.Chara.ObjPtr
			sppop  r10, Scn.Step.Chara.ObjPtr
			ldsrsr r9, r5
			calltr r8, Scn.Step.Chara.Obj.stateChanger()
			ldsrca r9, "Scn.Step.Chara.EnemyCommon.Parasol.StateMain"
			ldsrsr r10, r7
			calltv r8, Scn.Step.CharaUtil.StateChanger.setNextState(string,register)
			sppop  r7, Scn.Step.Chara.EnemyCommon.Parasol.StateMain
			sppop  r6, Scn.Step.Chara.ObjPtr
			sppop  r5, Scn.Step.Chara.ObjPtr
			sppop  r4, Scn.Step.Chara.ObjPtr
			ldsrsr r5, r2
			calltr r4, Scn.Step.Chara.ObjPtr.obj()const
			calltr r3, Scn.Step.Chara.Obj.stateChanger()
			calltv r3, Scn.Step.CharaUtil.StateChanger.changeStateIfPossible()
			ldsrsr r5, r2
			calltr r4, Scn.Step.Chara.ObjPtr.obj()const
			calltr r3, Scn.Step.Chara.Obj.objRelationCtrl()
			ldsrsr r5, r1
			calltr r4, Scn.Step.Chara.Obj.objRelationCtrl()
			calltv r3, Scn.Step.CharaUtil.ObjRelationCtrl.link(Scn.Step.CharaUtil.ObjRelationCtrl)
			ldsrsr r4, r1
			calltr r3, Scn.Step.Chara.Obj.objPtrHolder()
			ldsrsr r4, r2
			calltv r3, Scn.Step.Chara.ObjPtrHolder.setParasol(const ref Scn.Step.Chara.ObjPtr)
			ldsrsr r6, r2
			calltr r5, Scn.Step.Chara.ObjPtr.obj()const
			calltr r4, Scn.Step.Chara.Obj.model()
			calltr r3, Scn.Step.CharaUtil.Model.constraintCtrl()
			sppsh  r4, G3D.NodeRef
			ldsrsr r6, r1
			calltr r5, Scn.Step.Chara.Obj.model()
			ldsrc4 r6, 0x0
			calltr r4, Scn.Step.CharaUtil.Model.node(uint)
			calltv r3, Scn.Step.CharaUtil.ConstraintCtrl.setNode(const ref G3D.NodeRef)
			sppop  r4, G3D.NodeRef
			
			loc_00000068:
			sppop  r2, Scn.Step.Chara.ObjPtr
			
			return:
			ldsrsr r2, r0
			calltr r1, Scn.Step.Chara.Obj.vacuumReceiver()
			ldsrc4 r2, %ELEMENT_ID%
			calltv r1, Scn.Step.Vacuum.Receiver.setAbilityElement(uint)
			fleave r0
		}
	}
}
